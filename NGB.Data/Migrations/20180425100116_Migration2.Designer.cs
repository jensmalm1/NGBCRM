// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using NGB.Data;
using NGB.Domain;
using System;

namespace NGB.Data.Migrations
{
    [DbContext(typeof(BeanContext))]
    [Migration("20180425100116_Migration2")]
    partial class Migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NGB.Domain.BeanTypePreferences", b =>
                {
                    b.Property<int>("BeanTypesId");

                    b.Property<int>("CustomerId");

                    b.HasKey("BeanTypesId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("BeanTypePreferences");
                });

            modelBuilder.Entity("NGB.Domain.BeanTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BeanTypes");
                });

            modelBuilder.Entity("NGB.Domain.ContactEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("DateTime");

                    b.Property<string>("FullContent");

                    b.Property<string>("SummaryContent");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("ContactEvent");
                });

            modelBuilder.Entity("NGB.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompanyName");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("Lastname");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("PreferredContactType");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("NGB.Domain.BeanTypePreferences", b =>
                {
                    b.HasOne("NGB.Domain.BeanTypes", "BeanTypes")
                        .WithMany()
                        .HasForeignKey("BeanTypesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NGB.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NGB.Domain.ContactEvent", b =>
                {
                    b.HasOne("NGB.Domain.Customer")
                        .WithMany("ContactEvents")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
